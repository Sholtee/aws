#####################################################
# global.yml
#
# Author: Denes Solti
#####################################################
Description: Global infrastructure. Needs to deployed in "us-east-1" region

Parameters:
  app:
    Type: String
    Description: The application name (including prefix)
    MaxLength: '32'

Resources:
  RouterLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda that routes to index.html when visiting the base URL
      Code:
        ZipFile: |
          'use strict';
          exports.handler = function(event, context, callback) {
            try {          
              const request = event.Records[0].cf.request;
              console.log(`Request available: ${JSON.stringify(request)}`);
            
              switch(request.uri) {
                case '/index.html':
                  console.log('Serving "index.html"');
                  return callback(null, request);
                case '/':
                  console.log('Routing to "index.html"');
                  request.uri = '/index.html';
                  return callback(null, request);
                default:
                  console.log('Returning 404');
                  return callback(null, {
                    status: '404',
                    statusDescription: 'Not Found',
                    headers: {
                      'content-type': [{
                        key: 'Content-Type',
                        value: 'text/html'
                      }]
                    },
                    body: `
                      <!DOCTYPE html>
                      <html lang="en">
                        <head>
                          <meta charset="utf-8">
                          <title>Not Found</title>
                        </head>
                        <body>
                          <p>Not found</p>
                        </body>
                      </html>
                    `
                  });
              }           
            } catch (err) {
              console.error(err);
              return callback(err);
            }
          };
      FunctionName: !Sub "${app}-router"
      Handler: index.handler
      Role: !GetAtt RouterLambdaRole.Arn
      Runtime: nodejs18.x
      Timeout: 10
      MemorySize: 128
    Metadata:
      aws:cdk:path: Global/RouterLambda/Resource

  RouterLambdaVersion:
    Type: AWS::Lambda::Version
    Properties:
      Description: Lambda version. Lambda@Edge requires exact version
      FunctionName: !Ref RouterLambda
    Metadata:
      aws:cdk:path: Global/RouterLambda/Version

  RouterLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
            - replicator.lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: allowLambdaLogging
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:*"
                Resource: "*"
        - PolicyName: allowCloudFrontReplication
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - lambda:GetFunction
                - lambda:EnableReplication*
                - lambda:InvokeFunction
                - iam:CreateServiceLinkedRole
                - cloudfront:UpdateDistribution
              Resource: '*'
    Metadata:
      aws:cdk:path: Global/RouterLambda/Role

Outputs:
  RouterLambdaArn:  # export among regions not supported
    Value: !Ref RouterLambdaVersion
    Export:
      Name: !Sub "${app}-router-lambda-arn"